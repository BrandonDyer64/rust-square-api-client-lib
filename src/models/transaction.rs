//! Model struct for Transaction type

use serde::Deserialize;

use super::{enums::TransactionProduct, Address, DateTime, Refund, Tender};

/// This is a model struct for Transaction type.
#[derive(Clone, Debug, Deserialize, PartialEq)]
pub struct Transaction {
    /// The transaction's unique ID, issued by Square payments servers.
    pub id: String,
    /// The ID of the transaction's associated location.
    pub location_id: String,
    /// The timestamp for when the transaction was created.
    pub created_at: DateTime,
    /// The tenders used to pay in the transaction.
    pub tenders: Vec<Tender>,
    /// Refunds that have been applied to any tender in the transaction.
    pub refunds: Vec<Refund>,
    /// If the transaction was created with the [Charge]($e/Transactions/Charge) endpoint, this value
    /// is the same as the value provided for the `reference_id` parameter in the request to that
    /// endpoint. Otherwise, it is not set.
    pub reference_id: String,
    /// Indicates the Square product used to process a transaction.
    pub product: TransactionProduct,
    /// If the transaction was created in the Square Point of Sale app, this value is the ID
    /// generated for the transaction by Square Point of Sale. This ID has no relationship to the
    /// transaction's canonical `id`, which is generated by Square's backend servers. This value is
    /// generated for bookkeeping purposes, in case the transaction cannot immediately be completed
    /// (for example, if the transaction is processed in offline mode). It is not currently possible
    /// with the Connect API to perform a transaction lookup by this value.
    pub client_id: String,
    /// Represents a postal address in a country. For more information, see [Working with
    /// Addresses](https://developer.squareup.com/docs/build-basics/working-with-addresses).
    pub shipping_address: Address,
    /// The order_id is an identifier for the order associated with this transaction, if any.
    pub order_id: String,
}
